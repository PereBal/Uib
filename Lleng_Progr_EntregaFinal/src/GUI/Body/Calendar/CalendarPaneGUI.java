package GUI.Body.Calendar;

import GUI.Utils.ListFrame;
import Logic.Subject;
import Utils.Calendar.CalendarComposition;
import Utils.Calendar.Day;
import Utils.Exceptions.DBException;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;

/**
 *
 * @author dobleme
 */
public class CalendarPaneGUI extends javax.swing.JPanel {

  /**
   * Creates new form InfoElement
   *
   * @param listOfSubjects
   * @param cal
   * @param kind
   */
  public CalendarPaneGUI(Iterator listOfSubjects, CalendarComposition cal, int kind) {
    if (cal == null) {
      this.calendars = new CalendarComposition(new ArrayList<>());
    } else {
      this.calendars = cal;
    }
    this.kind = kind;
    initComponents();
    if (listOfSubjects == null) {
      jButton1.setVisible(false);
    } else {
      ArrayList<Subject> aux = new ArrayList<>();
      while (listOfSubjects.hasNext()) {
        aux.add((Subject) listOfSubjects.next());
      }

      strs = new String[aux.size()];
      for (int i = 0; i < strs.length; i++) {
        strs[i] = aux.get(i).getName() + " " + aux.get(i).getStartDate() + " -> " + aux.get(i).getFinishDate();
      }
    }
    auxInitComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jSeparator1 = new javax.swing.JSeparator();
    jButtonNext = new javax.swing.JButton();
    jButtonPrev = new javax.swing.JButton();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();
    jLabel3 = new javax.swing.JLabel();
    jLabel6 = new javax.swing.JLabel();
    jLabel7 = new javax.swing.JLabel();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    jLabel10 = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    jLabel14 = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    jLabel17 = new javax.swing.JLabel();
    jLabel18 = new javax.swing.JLabel();
    jLabel19 = new javax.swing.JLabel();
    jLabel20 = new javax.swing.JLabel();
    jLabel21 = new javax.swing.JLabel();
    jLabel22 = new javax.swing.JLabel();
    jLabel23 = new javax.swing.JLabel();
    jDateChooser1 = new com.toedter.calendar.JDateChooser();
    jButton1 = new javax.swing.JButton();

    setBackground(new java.awt.Color(255, 255, 255));
    setMinimumSize(new java.awt.Dimension(850, 670));
    setPreferredSize(new java.awt.Dimension(850, 670));

    jSeparator1.setForeground(new java.awt.Color(241, 241, 241));

    jButtonNext.setBackground(new java.awt.Color(241, 241, 241));
    jButtonNext.setText(">");
    jButtonNext.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButtonNext.setMaximumSize(new java.awt.Dimension(35, 25));
    jButtonNext.setMinimumSize(new java.awt.Dimension(35, 25));
    jButtonNext.setPreferredSize(new java.awt.Dimension(35, 25));
    jButtonNext.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonNextActionPerformed(evt);
      }
    });

    jButtonPrev.setBackground(new java.awt.Color(241, 241, 241));
    jButtonPrev.setText("<");
    jButtonPrev.setMargin(new java.awt.Insets(0, 0, 0, 0));
    jButtonPrev.setMaximumSize(new java.awt.Dimension(35, 25));
    jButtonPrev.setMinimumSize(new java.awt.Dimension(35, 25));
    jButtonPrev.setPreferredSize(new java.awt.Dimension(35, 25));
    jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonPrevActionPerformed(evt);
      }
    });

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null},
        {null, null, null, null, null}
      },
      new String [] {
        "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres"
      }
    ) {
      boolean[] canEdit = new boolean [] {
        false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jTable1.setEnabled(false);
    jTable1.setGridColor(new java.awt.Color(0, 0, 0));
    jTable1.setMinimumSize(new java.awt.Dimension(375, 560));
    jTable1.setRowHeight(40);
    jTable1.setRowSelectionAllowed(false);
    jTable1.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(jTable1);

    jLabel6.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel6.setText("08");

    jLabel7.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel7.setText("09");

    jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel8.setText("10");

    jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel9.setText("11");

    jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel10.setText("12");

    jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel11.setText("13");

    jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel12.setText("14");

    jLabel13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel13.setText("15");

    jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel14.setText("16");

    jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel15.setText("17");

    jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel16.setText("18");

    jLabel17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel17.setText("19");

    jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel18.setText("20");

    jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel19.setText("21");

    jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel20.setText("22");

    jLabel21.setText("jLabel21");

    jLabel22.setText("jLabel22");

    jLabel23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabel23.setText("->");

    jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        jDateChooser1PropertyChange(evt);
      }
    });

    jButton1.setBackground(new java.awt.Color(241, 241, 241));
    jButton1.setText("Llistar Assignatures");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jButtonPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(3, 3, 3)
            .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel21)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel23)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel22)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton1)
            .addGap(18, 18, 18)
            .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel6)
              .addComponent(jLabel7)
              .addComponent(jLabel8)
              .addComponent(jLabel9)
              .addComponent(jLabel10)
              .addComponent(jLabel11)
              .addComponent(jLabel12)
              .addComponent(jLabel13)
              .addComponent(jLabel14)
              .addComponent(jLabel15)
              .addComponent(jLabel16)
              .addComponent(jLabel17)
              .addComponent(jLabel18)
              .addComponent(jLabel19)
              .addComponent(jLabel20))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addGap(809, 809, 809)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 1, Short.MAX_VALUE)
                  .addComponent(jLabel3)))
              .addGroup(layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1)))))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jButtonNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jButtonPrev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(jLabel21)
            .addComponent(jLabel22)
            .addComponent(jLabel23)
            .addComponent(jButton1)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(1, 1, 1)
        .addComponent(jLabel3)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel6)
            .addGap(20, 20, 20)
            .addComponent(jLabel7)
            .addGap(25, 25, 25)
            .addComponent(jLabel8)
            .addGap(25, 25, 25)
            .addComponent(jLabel9)
            .addGap(25, 25, 25)
            .addComponent(jLabel10)
            .addGap(25, 25, 25)
            .addComponent(jLabel11)
            .addGap(25, 25, 25)
            .addComponent(jLabel12)
            .addGap(25, 25, 25)
            .addComponent(jLabel13)
            .addGap(25, 25, 25)
            .addComponent(jLabel14)
            .addGap(25, 25, 25)
            .addComponent(jLabel15)
            .addGap(25, 25, 25)
            .addComponent(jLabel16)
            .addGap(25, 25, 25)
            .addComponent(jLabel17)
            .addGap(25, 25, 25)
            .addComponent(jLabel18)
            .addGap(25, 25, 25)
            .addComponent(jLabel19)
            .addGap(18, 18, 18)
            .addComponent(jLabel20))
          .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(28, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

  private void auxInitComponents() {
    //newTable();
    jTable1.setDefaultRenderer(Object.class, (JTable jtable, Object o, boolean bln, boolean bln1, int i, int i1) -> {
      JPanel panel = (JPanel) o;
      return panel;
    });
    reInitLabels(Calendar.getInstance());
    paintingCals(Calendar.getInstance());
  }

  private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
    if (jDateChooser1.getCalendar() != null) {
      newTable();
      reInitLabels(jDateChooser1.getCalendar());
      paintingCals(jDateChooser1.getCalendar());
    }
  }//GEN-LAST:event_jDateChooser1PropertyChange

  private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
    now.add(Calendar.WEEK_OF_YEAR, -1);
    newTable();
    reInitLabels(now);
    paintingCals(now);
  }//GEN-LAST:event_jButtonPrevActionPerformed

  private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
    now.add(Calendar.WEEK_OF_YEAR, 1);
    newTable();
    reInitLabels(now);
    paintingCals(now);
  }//GEN-LAST:event_jButtonNextActionPerformed

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new ListFrame(strs).setVisible(true);
      }
    });
  }//GEN-LAST:event_jButton1ActionPerformed

  private void reInitLabels(Calendar c) {
    SimpleDateFormat f = new SimpleDateFormat("dd-MM-yyyy");
    c.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
    jLabel21.setText(f.format(c.getTime()));
    c.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);
    jLabel22.setText(f.format(c.getTime()));
  }

  private void paintingCals(Calendar calIns) {
    now = calIns;
    calendars.getCalElem().stream().forEach((c) -> {
      try {
        paintSubjecInAtWeek(c.getSubject(), calIns);
      } catch (DBException ex) {
        Logger.getLogger(CalendarPaneGUI.class.getName()).log(Level.SEVERE, null, ex);
      }
    });

    jTable1.repaint();
  }

  /**
   *
   * @param subject
   * @param cal Dilluns de la setmana
   */
  private void paintSubjecInAtWeek(Logic.Subject subject, Calendar cal) {
    try {
      JPanel panel = new JPanel();
      panel.setBackground(randomColor());

      JLabel lab = new JLabel("Aula " + subject.getClassroom().getId());
      lab.setFont(new java.awt.Font("Dialog", 0, 12));
      lab.setForeground(Color.white);
      lab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      lab.setMaximumSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 10));
      lab.setMinimumSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 10));
      lab.setPreferredSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 10));
      panel.add(lab);
      JLabel lab2 = new JLabel();
      switch (kind) {
        case 0:
        case 1:
          lab2.setText(subject.getName());
          break;
        case 2:
          if (subject.getStudy() != null) {
            lab2.setText(subject.getStudy().getName());
          }
          break;
      }
      lab2.setFont(new java.awt.Font("Dialog", 0, 12));
      lab2.setForeground(Color.white);
      lab2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      lab2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
      lab2.setMaximumSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 20));
      lab2.setMinimumSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 20));
      lab2.setPreferredSize(new java.awt.Dimension(jTable1.getPreferredSize().height / 5, 20));
      panel.add(lab2);

      Calendar startDate = Calendar.getInstance();
      startDate.setTime(subject.getStartDate());
      Calendar finishDate = Calendar.getInstance();
      finishDate.setTime(subject.getFinishDate());
      cal.set(Calendar.DAY_OF_WEEK, Calendar.MONDAY);
      Calendar cal2 = (Calendar) cal.clone();
      cal2.set(Calendar.DAY_OF_WEEK, Calendar.FRIDAY);
      if (startDate.compareTo(cal) < 1 && finishDate.compareTo(cal2) > -1) {
        Utils.Calendar.Day days[] = subject.getCalendar().getDays();
        for (Utils.Calendar.Day d : days) {
          paintDay(d, subject, panel);
        }
      } else if (startDate.get(Calendar.YEAR) == cal.get(Calendar.YEAR) && startDate.get(Calendar.WEEK_OF_YEAR) == cal.get(Calendar.WEEK_OF_YEAR)) {
        Utils.Calendar.Day days[] = subject.getCalendar().getDays();
        for (Utils.Calendar.Day d : days) {
          if (Day.dayOfWeekToNumber(d.getName()) + 2 >= startDate.get(Calendar.DAY_OF_WEEK)) {
            paintDay(d, subject, panel);
          }
        }
      } else if (finishDate.get(Calendar.YEAR) == cal2.get(Calendar.YEAR) && finishDate.get(Calendar.WEEK_OF_YEAR) == cal2.get(Calendar.WEEK_OF_YEAR)) {
        Utils.Calendar.Day days[] = subject.getCalendar().getDays();
        for (Utils.Calendar.Day d : days) {
          if (Day.dayOfWeekToNumber(d.getName()) + 2 <= finishDate.get(Calendar.DAY_OF_WEEK)) {
            paintDay(d, subject, panel);
          }
        }
      }

      jTable1.repaint();
    } catch (DBException ex) {
      Logger.getLogger(CalendarPaneGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  private void paintDay(Day d, Subject subject, JPanel panel) {
    try {
      if (subject.getCalendar().getTurn() == Logic.Study.Turn.morning) {
        for (int i = d.getStartHour(); i < d.getEndHour(); i++) {
          jTable1.getModel().setValueAt(panel, i, Day.dayOfWeekToNumber(d.getName()));
        }
      } else if (subject.getCalendar().getTurn() == Logic.Study.Turn.evening) {
        for (int i = d.getStartHour(); i < d.getEndHour(); i++) {
          jTable1.getModel().setValueAt(panel, i + 7, Day.dayOfWeekToNumber(d.getName()));
        }
      } else {
        for (int i = d.getStartHour(); i < d.getEndHour(); i++) {
          jTable1.getModel().setValueAt(panel, i, Day.dayOfWeekToNumber(d.getName()));
          jTable1.getModel().setValueAt(panel, i + 7, Day.dayOfWeekToNumber(d.getName()));
        }
      }
    } catch (DBException ex) {
      Logger.getLogger(CalendarPaneGUI.class.getName()).log(Level.SEVERE, null, ex);
    }
  }

  private static Color randomColor() {
    Random rnd = new Random();
    return new Color(rnd.nextInt(256),
            rnd.nextInt(256), rnd.nextInt(256));
  }

  private void newTable() {
    //jTable1 = new javax.swing.JTable();
    jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object[][]{
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null},
              {null, null, null, null, null}
            },
            new String[]{
              "Dilluns", "Dimarts", "Dimecres", "Dijous", "Divendres"
            }
    ) {
      boolean[] canEdit = new boolean[]{
        false, false, false, false, false
      };

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit[columnIndex];
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButtonNext;
  private javax.swing.JButton jButtonPrev;
  private com.toedter.calendar.JDateChooser jDateChooser1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel16;
  private javax.swing.JLabel jLabel17;
  private javax.swing.JLabel jLabel18;
  private javax.swing.JLabel jLabel19;
  private javax.swing.JLabel jLabel20;
  private javax.swing.JLabel jLabel21;
  private javax.swing.JLabel jLabel22;
  private javax.swing.JLabel jLabel23;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JTable jTable1;
  // End of variables declaration//GEN-END:variables

  private final CalendarComposition calendars;
  private final int kind;
  private Calendar now;
  private String[] strs;
}
