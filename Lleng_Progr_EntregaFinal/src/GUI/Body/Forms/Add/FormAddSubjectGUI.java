/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Body.Forms.Add;

import Definitions.Defs;
import GUI.Body.BodyGUI;
import static GUI.Main.connection;
import Logic.Study.Turn;
import Logic.Subject;
import Utils.Calendar.Day;
import Utils.Calendar.Day.DayOfWeek;
import java.awt.Color;
import java.util.ArrayList;
import java.util.Calendar;

/**
 *
 * @author dobleme
 */
public class FormAddSubjectGUI extends javax.swing.JPanel {

  /**
   * Creates new form FormAltaEstudi
   *
   * @param body
   */
  public FormAddSubjectGUI(BodyGUI body) {
    this.body = body;
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    buttonGroup1 = new javax.swing.ButtonGroup();
    jLabel2 = new javax.swing.JLabel();
    jSeparator1 = new javax.swing.JSeparator();
    jLabelCalendar = new javax.swing.JLabel();
    jLabelName = new javax.swing.JLabel();
    jLabelFinishDate = new javax.swing.JLabel();
    jLabelStartDate = new javax.swing.JLabel();
    jButtonAssignations = new javax.swing.JButton();
    jTextFieldName = new javax.swing.JTextField();
    jSpinnerMonday = new javax.swing.JSpinner();
    jSpinnerTuesday = new javax.swing.JSpinner();
    jSpinnerWednesday = new javax.swing.JSpinner();
    jSpinnerThursday = new javax.swing.JSpinner();
    jSpinnerFriday = new javax.swing.JSpinner();
    jLabelMonday = new javax.swing.JLabel();
    jLabelTuesday = new javax.swing.JLabel();
    jLabelWednseday = new javax.swing.JLabel();
    jLabelThursday = new javax.swing.JLabel();
    jLabelFriday = new javax.swing.JLabel();
    jLabelWarningName = new javax.swing.JLabel();
    jRadioButtonMorning = new javax.swing.JRadioButton();
    jRadioButtonEvening = new javax.swing.JRadioButton();
    jRadioButtonEveningMorning = new javax.swing.JRadioButton();
    jButtonCancel = new javax.swing.JButton();
    jDateChooserFinishDate = new com.toedter.calendar.JDateChooser();
    jDateChooserStartDate = new com.toedter.calendar.JDateChooser();

    setBackground(new java.awt.Color(255, 255, 255));
    setMinimumSize(new java.awt.Dimension(1150, 670));

    jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
    jLabel2.setForeground(new java.awt.Color(255, 51, 51));
    jLabel2.setText("Alta Assignatura");

    jSeparator1.setForeground(new java.awt.Color(241, 241, 241));

    jLabelCalendar.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelCalendar.setText("Horari:");

    jLabelName.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelName.setText("Nom:");

    jLabelFinishDate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelFinishDate.setText("Data de Final:");

    jLabelStartDate.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelStartDate.setText("Data d'Inici:");

    jButtonAssignations.setBackground(new java.awt.Color(241, 241, 241));
    jButtonAssignations.setText("Assignació Aula/Professor");
    jButtonAssignations.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonAssignationsActionPerformed(evt);
      }
    });

    jTextFieldName.setMinimumSize(new java.awt.Dimension(550, 28));
    jTextFieldName.setPreferredSize(new java.awt.Dimension(550, 28));
    jTextFieldName.addFocusListener(new java.awt.event.FocusAdapter() {
      public void focusLost(java.awt.event.FocusEvent evt) {
        jTextFieldNameFocusLost(evt);
      }
    });

    jSpinnerMonday.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
    jSpinnerMonday.setEnabled(false);

    jSpinnerTuesday.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
    jSpinnerTuesday.setEnabled(false);

    jSpinnerWednesday.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
    jSpinnerWednesday.setEnabled(false);

    jSpinnerThursday.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
    jSpinnerThursday.setEnabled(false);

    jSpinnerFriday.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
    jSpinnerFriday.setEnabled(false);

    jLabelMonday.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelMonday.setText("Dll");

    jLabelTuesday.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelTuesday.setText("Dm");

    jLabelWednseday.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelWednseday.setText("Dx");

    jLabelThursday.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelThursday.setText("Dj");

    jLabelFriday.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jLabelFriday.setText("Dv");

    jLabelWarningName.setFont(new java.awt.Font("Dialog", 2, 11)); // NOI18N
    jLabelWarningName.setText("(Màxim 60 caràcters)");

    jRadioButtonMorning.setBackground(new java.awt.Color(255, 255, 255));
    buttonGroup1.add(jRadioButtonMorning);
    jRadioButtonMorning.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jRadioButtonMorning.setSelected(true);
    jRadioButtonMorning.setText("Torn Matí");

    jRadioButtonEvening.setBackground(new java.awt.Color(255, 255, 255));
    buttonGroup1.add(jRadioButtonEvening);
    jRadioButtonEvening.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jRadioButtonEvening.setText("Torn Horabaixa");

    jRadioButtonEveningMorning.setBackground(new java.awt.Color(255, 255, 255));
    buttonGroup1.add(jRadioButtonEveningMorning);
    jRadioButtonEveningMorning.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
    jRadioButtonEveningMorning.setText("Torn Horabaixa/Matí");

    jButtonCancel.setBackground(new java.awt.Color(255, 51, 51));
    jButtonCancel.setText("Cancelar");
    jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButtonCancelActionPerformed(evt);
      }
    });

    jDateChooserFinishDate.setEnabled(false);
    jDateChooserFinishDate.setMinSelectableDate(Calendar.getInstance().getTime());
    jDateChooserFinishDate.setPreferredSize(new java.awt.Dimension(90, 28));
    jDateChooserFinishDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        jDateChooserFinishDatePropertyChange(evt);
      }
    });

    jDateChooserStartDate.setMinSelectableDate(Calendar.getInstance().getTime());
    jDateChooserStartDate.setPreferredSize(new java.awt.Dimension(90, 28));
    jDateChooserStartDate.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
      public void propertyChange(java.beans.PropertyChangeEvent evt) {
        jDateChooserStartDatePropertyChange(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(30, 30, 30)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 241, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                  .addComponent(jLabelStartDate)
                  .addComponent(jLabelName)))
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabelCalendar)))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jButtonCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonAssignations))
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabelWarningName)
                .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                  .addGroup(layout.createSequentialGroup()
                    .addComponent(jRadioButtonMorning)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jRadioButtonEvening)
                    .addGap(104, 104, 104)
                    .addComponent(jRadioButtonEveningMorning))
                  .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelMonday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerMonday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabelTuesday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addComponent(jDateChooserStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jLabelWednseday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerWednesday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabelThursday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerThursday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jLabelFriday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinnerFriday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                      .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(jLabelFinishDate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooserFinishDate, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
            .addContainerGap(267, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabel2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jSeparator1)
            .addGap(38, 38, 38))))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(30, 30, 30)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel2))
        .addGap(50, 50, 50)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabelName)
          .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(jLabelWarningName)
        .addGap(50, 50, 50)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
            .addComponent(jLabelStartDate)
            .addComponent(jLabelFinishDate))
          .addComponent(jDateChooserStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jDateChooserFinishDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(70, 70, 70)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabelCalendar)
          .addComponent(jSpinnerMonday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jSpinnerTuesday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jSpinnerWednesday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jSpinnerThursday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jSpinnerFriday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabelMonday)
          .addComponent(jLabelTuesday)
          .addComponent(jLabelWednseday)
          .addComponent(jLabelThursday)
          .addComponent(jLabelFriday))
        .addGap(70, 70, 70)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jRadioButtonEveningMorning)
          .addComponent(jRadioButtonEvening)
          .addComponent(jRadioButtonMorning))
        .addGap(70, 70, 70)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButtonAssignations)
          .addComponent(jButtonCancel))
        .addContainerGap(169, Short.MAX_VALUE))
    );
  }// </editor-fold>//GEN-END:initComponents

    private void jButtonAssignationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAssignationsActionPerformed
      Calendar startDate = jDateChooserStartDate.getCalendar();
      Calendar finishDate = jDateChooserFinishDate.getCalendar();

      int total = (Integer) jSpinnerMonday.getValue() + (Integer) jSpinnerTuesday.getValue() + (Integer) jSpinnerWednesday.getValue() + (Integer) jSpinnerThursday.getValue() + (Integer) jSpinnerFriday.getValue();

      if (wrongFormat > 0 || startDate == null || finishDate == null || startDate.get(Calendar.DAY_OF_WEEK) == 7 || startDate.get(Calendar.DAY_OF_WEEK) == 1
              || finishDate.get(Calendar.DAY_OF_WEEK) == 7 || finishDate.get(Calendar.DAY_OF_WEEK) == 1 || total == 0 || startDate.compareTo(finishDate) > -1) {
        GUI.Utils.Dialogs.wrongInputForm(this);
      } else {
        Turn turn = Turn.morning;
        if (jRadioButtonEvening.isSelected()) {
          turn = Turn.evening;
        } else if (jRadioButtonEveningMorning.isSelected()) {
          turn = Turn.morningAndEvening;
        }

        ArrayList<Day> auxDays = new ArrayList<>();
        if ((Integer) jSpinnerMonday.getValue() > 0) {
          auxDays.add(new Day(DayOfWeek.Monday, 0, (Integer) jSpinnerMonday.getValue()));
        }
        if ((Integer) jSpinnerTuesday.getValue() > 0) {
          auxDays.add(new Day(DayOfWeek.Tuesday, 0, (Integer) jSpinnerTuesday.getValue()));
        }
        if ((Integer) jSpinnerWednesday.getValue() > 0) {
          auxDays.add(new Day(DayOfWeek.Wednesday, 0, (Integer) jSpinnerWednesday.getValue()));
        }
        if ((Integer) jSpinnerThursday.getValue() > 0) {
          auxDays.add(new Day(DayOfWeek.Thursday, 0, (Integer) jSpinnerThursday.getValue()));
        }
        if ((Integer) jSpinnerFriday.getValue() > 0) {
          auxDays.add(new Day(DayOfWeek.Friday, 0, (Integer) jSpinnerFriday.getValue()));
        }

        Day days[] = new Day[auxDays.size()];
        days = auxDays.toArray(days);

        Utils.Calendar.Calendar cal = new Utils.Calendar.Calendar(connection, total / days.length, days.length, turn, days);

        Subject subject = new Subject(connection, Defs.formatString(jTextFieldName.getText()), startDate.getTime(), finishDate.getTime(), null, null, null, cal);

        body.showFormAssignationsSubject(subject, null, false);
      }
    }//GEN-LAST:event_jButtonAssignationsActionPerformed

    private void jTextFieldNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNameFocusLost
      if (jTextFieldName.getText().length() > Defs.stringLength || jTextFieldName.getText().length() == 0) {
        jLabelWarningName.setForeground(Color.red);
        wrongFormat = 1;
      } else {
        jLabelWarningName.setForeground(Color.black);
        wrongFormat = 0;
      }
    }//GEN-LAST:event_jTextFieldNameFocusLost

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
      body.showHome();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jDateChooserStartDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserStartDatePropertyChange
      if (jDateChooserStartDate.getCalendar() != null) {
        jDateChooserFinishDate.setEnabled(true);
      }
//      try {
//        System.out.println(jDateChooserStartDate.getCalendar().getTime());
//        System.out.println(jDateChooserFinishDate.getCalendar().getTime());
//        System.out.println(jDateChooserStartDate.getCalendar().compareTo(jDateChooserFinishDate.getCalendar()));
//      } catch (NullPointerException e) {
//        System.out.println("Algo null");
//      }
//      System.out.println("-------------------------------------------------");
      if (jDateChooserStartDate.getCalendar() != null && jDateChooserFinishDate.getCalendar() != null
              && jDateChooserStartDate.getCalendar().compareTo(jDateChooserFinishDate.getCalendar()) < 1) {
        System.out.println("Canviam Spinners");
        enableSpinners();
      }
    }//GEN-LAST:event_jDateChooserStartDatePropertyChange

    private void jDateChooserFinishDatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFinishDatePropertyChange
//      try {
//        System.out.println(jDateChooserStartDate.getCalendar().getTime());
//        System.out.println(jDateChooserFinishDate.getCalendar().getTime());
//        System.out.println(jDateChooserStartDate.getCalendar().compareTo(jDateChooserFinishDate.getCalendar()));
//      } catch (NullPointerException e) {
//        System.out.println("Algo null");
//      }
//      System.out.println("-------------------------------------------------");
      if (jDateChooserStartDate.getCalendar() != null && jDateChooserFinishDate.getCalendar() != null
              && jDateChooserStartDate.getCalendar().compareTo(jDateChooserFinishDate.getCalendar()) < 1) {
//        System.out.println("Canviam Spinners");
        enableSpinners();
      }
    }//GEN-LAST:event_jDateChooserFinishDatePropertyChange

  private void enableSpinners() {
    boolean activeSpinner[] = {false, false, false, false, false};
    Calendar start = jDateChooserStartDate.getCalendar();
    Calendar finish = jDateChooserFinishDate.getCalendar();

    // Activa spinners
    int day = 0;
    while (start.getTime().compareTo(finish.getTime()) < 1 && day < 5) {
      switch (start.get(Calendar.DAY_OF_WEEK)) {
        case 2:
          jSpinnerMonday.setEnabled(true);
          activeSpinner[0] = true;
          day++;
          break;
        case 3:
          jSpinnerTuesday.setEnabled(true);
          activeSpinner[1] = true;
          day++;
          break;
        case 4:
          jSpinnerWednesday.setEnabled(true);
          activeSpinner[2] = true;
          day++;
          break;
        case 5:
          jSpinnerThursday.setEnabled(true);
          activeSpinner[3] = true;
          day++;
          break;
        case 6:
          jSpinnerFriday.setEnabled(true);
          activeSpinner[4] = true;
          day++;
          break;
      }
      start.add(Calendar.DATE, 1);
    }

    //Deactivate spinners
    for (int i = 0; i < 5; i++) {
      switch (i) {
        case 0:
          if (!activeSpinner[0]) {
            jSpinnerMonday.setEnabled(false);
          }
          break;
        case 1:
          if (!activeSpinner[1]) {
            jSpinnerTuesday.setEnabled(false);
          }
          break;
        case 2:
          if (!activeSpinner[2]) {
            jSpinnerWednesday.setEnabled(false);
          }
          break;
        case 3:
          if (!activeSpinner[3]) {
            jSpinnerThursday.setEnabled(false);
          }
          break;
        case 4:
          if (!activeSpinner[4]) {
            jSpinnerFriday.setEnabled(false);
          }
          break;
      }
    }
    repaint();
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.ButtonGroup buttonGroup1;
  private javax.swing.JButton jButtonAssignations;
  private javax.swing.JButton jButtonCancel;
  private com.toedter.calendar.JDateChooser jDateChooserFinishDate;
  private com.toedter.calendar.JDateChooser jDateChooserStartDate;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabelCalendar;
  private javax.swing.JLabel jLabelFinishDate;
  private javax.swing.JLabel jLabelFriday;
  private javax.swing.JLabel jLabelMonday;
  private javax.swing.JLabel jLabelName;
  private javax.swing.JLabel jLabelStartDate;
  private javax.swing.JLabel jLabelThursday;
  private javax.swing.JLabel jLabelTuesday;
  private javax.swing.JLabel jLabelWarningName;
  private javax.swing.JLabel jLabelWednseday;
  private javax.swing.JRadioButton jRadioButtonEvening;
  private javax.swing.JRadioButton jRadioButtonEveningMorning;
  private javax.swing.JRadioButton jRadioButtonMorning;
  private javax.swing.JSeparator jSeparator1;
  private javax.swing.JSpinner jSpinnerFriday;
  private javax.swing.JSpinner jSpinnerMonday;
  private javax.swing.JSpinner jSpinnerThursday;
  private javax.swing.JSpinner jSpinnerTuesday;
  private javax.swing.JSpinner jSpinnerWednesday;
  private javax.swing.JTextField jTextFieldName;
  // End of variables declaration//GEN-END:variables
    private BodyGUI body;
  private int wrongFormat = 1;

}
